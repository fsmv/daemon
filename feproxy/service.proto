syntax = "proto3";
package feproxy;
option go_package = "daemon/feproxy";

import "google/protobuf/timestamp.proto";

service Feproxy {
    rpc Register(RegisterRequest) returns (Lease) {}
    rpc Renew(Lease) returns (Lease) {}
    rpc Unregister(Lease) returns (Lease) {}
}

message RegisterRequest {
    string pattern = 1; // TODO: maybe support multiple patterns for the same IP/port
    // Set for third party web interfaces that can't take an automatic lease port
    // Must be outside the range of feproxy's automatic ports
    uint32 fixed_port = 2;
    // If true, remove the pattern in the URL of HTTP requests we forward to the
    // backend to hide that it is behind a reverse proxy.
    bool strip_pattern = 3;
}

message Lease {
    string pattern = 1;
    uint32 port = 2;
    google.protobuf.Timestamp timeout = 3;
}
