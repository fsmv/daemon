#!/bin/sh

# To install this hook:
#     echo "./pre-commit-hook" > .git/hooks/pre-commit; chmod +x .git/hooks/pre-commit
#
# This way it will always run the latest version from the repository

# Check if what we're about to commit builds at the repo root
#
# Do stashes so we only compile what we're about to commit and ignore the rest
# Don't panic if you get stash problems, it saves your work!
NEED_POP=-1
if [ -n "$(git diff --name-only)" ]; then
  git stash -q --keep-index --include-untracked
  NEED_POP=$?
fi

go mod tidy -go=1.18
TIDY_DIFFS=$(git diff --name-only | grep "go\.")
if [ -n "$TIDY_DIFFS" ]; then
  echo "go mod tidy produced diffs, add the changes to your commit or before it."
  exit 1
fi

# Make sure we have generated the go code from any the proto changes
PROTO_DIFFS=$(git diff --cached --name-only | grep '\.proto')
if [ -n "$PROTO_DIFFS" ]; then
  go generate
  GEN_DIFFS=$(git diff --name-only | grep "\.pb\.go")
  if [ -n "$GEN_DIFFS" ]; then
    echo "go generate produced diffs, add the .pb.go files to your commit."
    exit 1
  fi
fi

MAC_DIFFS=$(git diff --cached --name-only | grep '_darwin\.go')
if [ -n "$MAC_DIFFS" ]; then
  GOOS=darwin go build -o test-build && rm test-build && GOOS=darwin go vet ./...
  STATUS=$? # other commands will overwrite $? so save it
  if [ $STATUS -ne 0 ]; then
    if [ $NEED_POP -eq 0 ]; then
      git stash pop -q
    fi
    exit $STATUS
  fi
fi

WINDOWS_DIFFS=$(git diff --cached --name-only | grep '_windows\.go')
if [ -n "$WINDOWS_DIFFS" ]; then
  GOOS=windows go build -o test-build && rm test-build && GOOS=windows go vet ./...
  STATUS=$? # other commands will overwrite $? so save it
  if [ $STATUS -ne 0 ]; then
    if [ $NEED_POP -eq 0 ]; then
      git stash pop -q
    fi
    exit $STATUS
  fi
fi

go build -o test-build && rm test-build; go vet ./... && go test ./... > /dev/null
STATUS=$? # other commands will overwrite $? so save it
if [ $NEED_POP -eq 0 ]; then
  git stash pop -q
fi
exit $STATUS
